server:
  port: 8081

spring:
  application:
    name: user-service
  datasource:
    url: jdbc:postgresql://postgres-master:5432/user_db
    username: ${POSTGRES_USER:postgres}
    password: ${POSTGRES_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 20000
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 300000
      pool-name: UserServiceMasterHikariPool
  
  # Replica/Slave datasource configuration for read operations
  datasource.replica:
    url: jdbc:postgresql://postgres-slave-1:5432/user_db
    username: ${POSTGRES_USER:postgres}
    password: ${POSTGRES_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 20000
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 300000
      read-only: true
      pool-name: UserServiceSlaveHikariPool
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true

# Actuator endpoints for monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

# Configure logging
logging:
  level:
    com.todo_app.user_service: INFO
    org.springframework.transaction: DEBUG  # To see transaction read-only status for routing
    org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource: DEBUG  # To see datasource routing

---
# Docker profile configuration
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: jdbc:postgresql://postgres-master:5432/user_db
  datasource.replica:
    url: jdbc:postgresql://postgres-slave-1:5432/user_db

eureka:
  client:
    service-url:
      defaultZone: http://service-registry:8761/eureka/